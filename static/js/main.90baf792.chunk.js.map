{"version":3,"sources":["components/clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","prevClockName","clockName","prevToday","props","console","info","toLocaleTimeString","debug","clearInterval","className","Component","getRandomName","value","now","toString","slice","App","hasClock","clockId","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,SAC1B,OAVP,gCAaE,cAGG,IAFYM,EAEb,EAFEC,UACOC,EACT,EADET,MAEMQ,EAAcL,KAAKO,MAAnBF,UACAR,EAAUG,KAAKJ,MAAfC,MAEJS,IAAcT,GAEhBW,QAAQC,KAAKZ,EAAMa,sBAGjBN,IAAkBC,GAEpBG,QAAQG,MAAR,uBAA8BP,EAA9B,eAAkDC,MA3BxD,kCA+BE,WACEJ,OAAOW,cAAcZ,KAAKD,WAhC9B,oBAmCE,WACE,IAAQM,EAAcL,KAAKO,MAAnBF,UACAR,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,IAGF,YAED,sBAAMQ,UAAU,cAAhB,SACGhB,EAAMa,8BAhDjB,GAA2BI,aCC3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAGX,IAAMI,EAAb,4MACExB,MAAyB,CACvBS,UAAW,UACXgB,UAAU,GAHd,EAMEC,aANF,IAsBEC,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKtB,SAAS,CAAEkB,UAAU,KAxB9B,EA2BEK,UAAY,WACV,EAAKvB,SAAS,CAAEkB,UAAU,KA5B9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe5B,KAAKuB,WAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,WACxC1B,KAAKsB,QAAUrB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEE,UAAWU,QAC1B,QAbP,kCAgBE,WACEY,SAASE,oBAAoB,cAAe7B,KAAKuB,WACjDI,SAASE,oBAAoB,QAAS7B,KAAK0B,WAC3CzB,OAAOW,cAAcZ,KAAKsB,WAnB9B,oBA+BE,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECb,KAAKJ,MAAMyB,UACV,cAAC,EAAD,CACEhB,UAAWL,KAAKJ,MAAMS,mBAtClC,GAAyBS,aCdzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.90baf792.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerId: number | undefined;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    { clockName: prevClockName }: Props,\n    { today: prevToday }: State,\n  ) {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    if (prevToday !== today) {\n      // eslint-disable-next-line no-console\n      console.info(today.toLocaleTimeString());\n    }\n\n    if (prevClockName !== clockName) {\n    // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock';\n\ntype Props = {};\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<Props, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  clockId: number | undefined;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n    this.clockId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    window.clearInterval(this.clockId);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock\n            clockName={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}